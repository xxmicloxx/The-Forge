/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

PUSH_CONSTANT(ShadowRootConstants, b0)
{
    DATA(uint, CubeIndex, None);
    DATA(uint, ParticleIndex, None);
};

#include "shader_defs.h.fsl"
#include "vb_resources.h.fsl"

#include "../../../../../../Common_3/Renderer/ParticleSystem/Shaders/particle_shared.h.fsl"
#include "../../../../../../Common_3/Renderer/ParticleSystem/Shaders/particle_packing.h.fsl"
#include "../../../../../../Common_3/Renderer/ParticleSystem/Shaders/particle_sets.h.fsl"

float4 PS_MAIN( PsInVBAlphaTested In, SV_PrimitiveID(uint) primitiveId )
{
    INIT_MAIN;
    float4 Out;

    float alpha = 0.0f;
    uint materialID = In.materialID;

    BeginNonUniformResourceIndex(materialID, MAX_TEXTURE_UNITS);
		alpha = SampleTex2D(Get(diffuseMaps)[materialID], Get(textureFilter), In.texCoord).a;
    EndNonUniformResourceIndex();
    
    clip(alpha < 0.5f ? -1 : 1);
    Out = unpackUnorm4x8( PACK_VB_DATA(GEOMSET_ALPHA_CUTOUT, primitiveId));
    RETURN(Out);
}
